name: xhmm_exon_interval
description: Converts the GRCh37 coding exon BED file to a Picard Interval List

# Define the resources needed for this pipeline.
resources:
  zones:
  - us-west1-a

  # Create a data disk that is attached to the VM and destroyed when the
  # pipeline terminates.
  disks:
  - name: datadisk
    autoDelete: True

    # Within the Docker container, specify a mount point for the disk.
    mountPoint: /mnt/data

# Specify the Docker image to use along with the command
docker:
  imageName: yigewu/xhmm:google_test1

  # The Pipelines API will create the input directory when localizing files,
  # but does not create the output directory.
  cmd: >
    mkdir /mnt/data/output &&
    cd /mnt/data/input &&
    wget https://github.com/broadinstitute/picard/releases/download/2.10.4/picard.jar &&
    /usr/bin/java -jar picard.jar BedToIntervalList I=Homo_sapiens.GRCh37.ensGene.coding.exon.bed O=/mnt/data/output/Homo_sapiens.GRCh37.ensGene.coding.exon.bed.interval_list SD=GRCh37-lite.dict

# The Pipelines API currently supports GCS paths, along with patterns (globs),
# but it doesn't directly support a list of files being passed as a single input
# parameter ("gs://bucket/foo.bam gs://bucket/bar.bam").
# for testing purpose I'll upload the Human reference genome files and example bam files
inputParameters:
- name: bedFile
  description: the path for the bedfile
  localCopy:
    path: input/
    disk: datadisk
- name: refDict
  description: the path for the Human reference genome dictionary file
  localCopy:
    path: input/
    disk: datadisk

# By specifying an outputParameter, we instruct the pipelines API to
# copy /mnt/data/output/* to the Cloud Storage location specified in
# the pipelineArgs (see below).
outputParameters:
- name: outputPath
  description: output path
  localCopy:
    path: output/*
    disk: datadisk
