name: xhmm_discover_cnv
description: Discovers CNVs in normalized data

# Define the resources needed for this pipeline.
resources:
  zones:
  - us-west1-a

  # Create a data disk that is attached to the VM and destroyed when the
  # pipeline terminates.
  disks:
  - name: datadisk
    autoDelete: True

    # Within the Docker container, specify a mount point for the disk.
    mountPoint: /mnt/data
  minimumRamGb: 100
  minimumCpuCores: 4
# Specify the Docker image to use along with the command
docker:
  imageName: yigewu/xhmm:google_test1

  # The Pipelines API will create the input directory when localizing files,
  # but does not create the output directory.
  cmd: >
    mkdir /mnt/data/output &&
    ls -lrt /mnt/data/input > /mnt/data/output/input.files.txt &&
    /statgen-xhmm-cc14e528d909/xhmm --discover -p /statgen-xhmm-cc14e528d909/params.txt -r /mnt/data/input/DATA.PCA_normalized.filtered.sample_zscores.RD.txt -R /mnt/data/input/DATA.same_filtered.RD.txt -c /mnt/data/output/DATA.xcnv -a /mnt/data/output/DATA.aux_xcnv -s /mnt/data/output/DATA &&
    ls -lrt /mnt/data/output > /mnt/data/output/output.files.txt

# The Pipelines API currently supports GCS paths, along with patterns (globs),
# but it doesn't directly support a list of files being passed as a single input
# parameter ("gs://bucket/foo.bam gs://bucket/bar.bam").
# for testing purpose I'll upload the Human reference genome files and example bam files
inputParameters:
- name: zScore.filtered.RD
  description: the path for the zScore filtered RD file
  localCopy:
    path: input/
    disk: datadisk
- name: same.filtered.RD
  description: the path for the filterd original RD file filtering the same targets and samples as zScore.filtered.RD
  localCopy:
    path: input/
    disk: datadisk
# By specifying an outputParameter, we instruct the pipelines API to
# copy /mnt/data/output/* to the Cloud Storage location specified in
# the pipelineArgs (see below).
outputParameters:
- name: outputPath
  description: output path
  localCopy:
    path: output/*
    disk: datadisk
